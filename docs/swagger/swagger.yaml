openapi: 3.0.0
paths:
  /auth/sign-up:
    post:
      operationId: AuthController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDto'
      tags: &ref_0
        - Auth
  /auth/sign-in:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDto'
      tags: *ref_0
  /health:
    get:
      operationId: HealthController_getHealth
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponseDto'
      tags:
        - Health
  /lists:
    get:
      operationId: ListsController_getLists
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListResponseDto'
      tags: &ref_1
        - Lists
    post:
      operationId: ListsController_createList
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDto'
      tags: *ref_1
  /lists/{id}:
    get:
      operationId: ListsController_getList
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDto'
      tags: *ref_1
    patch:
      operationId: ListsController_updateList
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDto'
      tags: *ref_1
    delete:
      operationId: ListsController_deleteList
      parameters: []
      responses:
        '204':
          description: ''
      tags: *ref_1
  /tasks:
    get:
      operationId: TasksController_getTasks
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponseDto'
      tags: &ref_2
        - Tasks
    post:
      operationId: TasksController_createTask
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
      tags: *ref_2
  /tasks/{id}:
    get:
      operationId: TasksController_getTask
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
      tags: *ref_2
    patch:
      operationId: TasksController_updateTask
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
      tags: *ref_2
    delete:
      operationId: TasksController_deleteTask
      parameters: []
      responses:
        '204':
          description: ''
      tags: *ref_2
  /user:
    get:
      operationId: UsersController_getUser
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags: &ref_3
        - User
    delete:
      operationId: UsersController_deleteUser
      parameters: []
      responses:
        '204':
          description: ''
      tags: *ref_3
  /user/email:
    patch:
      operationId: UsersController_updateEmail
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags: *ref_3
  /user/username:
    patch:
      operationId: UsersController_updateUsername
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags: *ref_3
  /user/password:
    patch:
      operationId: UsersController_updatePassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags: *ref_3
info:
  title: Nest.js - API - Template
  description: Nest.js - API - Template
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    TokenRequestDto:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
      required:
        - email
        - username
        - password
    TokenResponseDto:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    HealthResponseDto:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    ListResponseDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        primary:
          type: boolean
        userId:
          type: string
      required:
        - id
        - title
        - primary
        - userId
    ListRequestDto:
      type: object
      properties:
        title:
          type: string
      required:
        - title
    TaskResponseDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        listId:
          type: string
      required:
        - id
        - title
        - description
        - completed
        - listId
    UserResponseDto:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
      required:
        - id
        - email
        - username
    UserRequestDto:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
      required:
        - email
        - username
        - password
